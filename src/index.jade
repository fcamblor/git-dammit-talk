doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Git dammit!

    link(rel='stylesheet', type='text/css', href='build/build.css')
    link(href="https://fonts.googleapis.com/css?family=Lato" rel="stylesheet")

  body

    article

      section
        h1 Git Dammit!
        img(src='images/gifs/god-dammit.gif')
        
        
      // Modifier dernier commit
      section.bd-title-text(data-bespoke-backdrop='bd-title')
        h2 J'ai besoin de modifier mon dernier commit

      section
        ul
          li
            pre
              code.language-shell
                $ git commit --amend
          li
            pre
              code.language-shell
                $ git commit --amend --no-edit

      section
        ul.inline
          li
            img(src='images/simple-branch.svg')
          li
            img(src='images/simple-branch-amended.svg')

            
      // Modifier, pas le dernier (fixup)
      section.bd-title-text(data-bespoke-backdrop='bd-title')
        h2 Celui que je dois modifier n'est pas le dernier...
        ul.inline
          li
            img(src='images/simple-branch.svg')

      section
        ul
          li
            pre
              code.language-shell
                $ git commit --fixup {sha1-A}
        ul.inline
          li
            img(src='images/fixup-branch.svg')

      section.bd-tilde-text(data-bespoke-backdrop='bd-tilde')
        ul.column
          li
            pre
              code.language-shell
                $ git rebase -i {sha1-A}~ --autosquash
        ul.inline
          li
            img(src='images/fixup-branch-squashed.svg')
          li
            img(src='images/fixup-branch-squashed-end.svg')
      
      section
        ul
          li
            pre
              code.language-shell
                $ git push -f origin ma-branche


      // J'ai modifié mes commits, puis j'ai pull
      section.bd-title-text(data-bespoke-backdrop='bd-title')
        h2 Oups, J'ai modifié mes commits, et puis j'ai fait un pull.
        h3 Je me retrouve avec des commits en double

      section
        ul.inline
          li
            img(src='images/local-branch-amended.svg')
          li
            img(src='images/remote-branch.svg')

      section
        ul.inline
          li
            img(src='images/merged-branch-wrong.svg')
          li
            img(src='images/rebased-branch-wrong.svg')

      section
        ul
          li
            pre
              code.language-shell
                $ git push -f origin ma-branche

      section
        h2 Je veux abandonner mes modifications
        h3 et revenir à la version du repository distant
      
      section
        pre
          code.language-shell
            $ git fetch origin ma-branche
            $ git reset --hard origin/ma-branche

      section
        img(src='images/local-vs-remote-branches.svg')

      section
        img(src='images/pull-vs-fetch-merge.svg')
        
        
      // Supprimer le dernier commit
      section
        h2 Je veux supprimer mon dernier commit
        
      section
        img(src='images/git-index-initial-state.svg')
      section
        img(src='images/git-index-initial-state-status.svg')
      section
        img(src='images/git-index-added-file.svg')
      section
        img(src='images/git-index-reset-file.svg')
      section
        img(src='images/git-index-added-file.svg')
      section
        img(src='images/git-index-committed-file.svg')
          
      section
        ul
          li
            pre
              code.language-shell
        $ git reset HEAD~

      // Revenir sur la branche précédente
      section
        h2 Je veux revenir sur la branche sur laquelle j'étais juste avant

      section
        pre
          code.language-shell
            $ git checkout -


      // git add -p
      section
        h2 J'ai modifié un fichier mais je voudrais séparer les modifications dans deux commits différents

      section
        pre
          code.language-shell
            $ git add -p


      // git status, git diff...
      section
        h2 Comment voir les modifications en cours ?

      section
        h3 Modifications "unstaged"
        pre
          code.language-shell
            $ git diff

      section
        h3 Modifications "staged"
        pre
          code.language-shell
            $ git diff --cached
            $ git diff --staged
        
      section
        h3 Toutes les modifications
        pre
          code.language-shell
            $ git diff HEAD

      section
        h2 Je veux annuler les modifications faites sur un fichier en particulier

      section
        pre
          code.language-shell
            $ git checkout -- monFichier.ext

      section
        h2 TODO git rebase --onto

      section
        h2 TODO git reflog
        
      section.emphatic-text(data-bespoke-backdrop='emphatic')
        h2 Emphatic Slide!
        h3 Powered by <a href="https://github.com/markdalgleish/bespoke-backdrop">bespoke-backdrop</a>

    script(src='build/build.js')
